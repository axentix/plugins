---
name: data-deployment

on:
  pull_request:
    branches:
    - master
    paths:
    - 'plugins/**'

jobs:
  data:
    runs-on: ubuntu-latest
    outputs:
      plugin-name: ${{ steps.pr-title.outputs.pr-plugin-name }}
      package-content: ${{ steps.package-json-content.outputs.content }}
    steps:
      - id: pr-title
        name: fetch plugin name from pr title
        run: |
          githubjson=`cat $GITHUB_EVENT_PATH`
          PRTitle=`echo $(jq -r '.pull_request.title' <<< "$githubjson")`
          PRTitle=(${PRTitle//:/ })
          echo "::set-output name=pr-plugin-name::${PRTitle[0]})"
      - id: package-json-content
        name: get package.json content
        working-directory: ./plugins/${{steps.pr-title.outputs.pr-plugin-name}}
        run: |
          content=`cat ./package.json`
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=content::$content"
      - name: extracted informations
        run: |
          json=${{fromJson(steps.package-json-content.outputs.content)}}
          echo "Plugin name: ${json}.ax-plugins.name"
          echo "Npm name: ${json}.name"
          echo "Version: ${json}.version"
          echo "Description: ${json}.description"
          echo "Author: ${json}.author"
          echo "Use CDN: ${json}.ax-plugins.cdn"

  deploy:
    runs-on: ubuntu-latest
    needs: data
    steps:
      - name: build
        if: github.event.pull_request.merged == true && fromJson(needs.data.outputs.package-content).ax-plugins.build == true
        working-directory: ./plugins/${{needs.data.outputs.plugin-name}}
        run: |
          npm install
          npm run build